---
# ServiceMonitor CRD from Prometheus Operator
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: servicemonitors.monitoring.coreos.com
spec:
  group: monitoring.coreos.com
  names:
    categories:
    - prometheus-operator
    kind: ServiceMonitor
    listKind: ServiceMonitorList
    plural: servicemonitors
    shortNames:
    - smon
    singular: servicemonitor
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceMonitor defines monitoring for a set of services.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of desired Service selection for target discovery
              by Prometheus.
            properties:
              attachMetadata:
                description: AttachMetadata defines additional metadata which is added
                  to the discovered targets.
                properties:
                  node:
                    description: When set to true, Prometheus must have the `get`
                      permission on the `Nodes` objects.
                    type: boolean
                type: object
              endpoints:
                description: A list of endpoints allowed as part of this ServiceMonitor.
                items:
                  description: Endpoint defines a scrapeable endpoint serving Prometheus
                    metrics.
                  properties:
                    authorization:
                      description: '`authorization` configures the Authorization header
                        credentials to use when scraping the target. Cannot be set
                        at the same time as `basicAuth`, or `oauth2`.'
                      properties:
                        credentials:
                          description: Selects a key of a Secret in the namespace
                            that contains the credentials for authentication.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        type:
                          description: '`type` defines the type of authentication to
                            use. The value is case-insensitive. "Basic" is not a supported
                            value. Default: "Bearer"'
                          type: string
                      type: object
                    basicAuth:
                      description: '`basicAuth` configures the Basic Authentication
                        credentials to use when scraping the target. Cannot be set
                        at the same time as `authorization`, or `oauth2`.'
                      properties:
                        password:
                          description: '`password` specifies a key of a Secret containing
                            the password for authentication.'
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        username:
                          description: '`username` specifies a key of a Secret containing
                            the username for authentication.'
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenFile:
                      description: File to read bearer token for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: '`bearerTokenSecret` specifies a key of a Secret
                        containing the bearer token for scraping targets. The secret
                        needs to be in the same namespace as the ServiceMonitor object
                        and accessible by the Prometheus Operator.'
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    enableHttp2:
                      description: '`enableHttp2` can be used to disable HTTP2 when
                        scraping the target.'
                      type: boolean
                    filterRunning:
                      description: Drop pods that are not running. (Failed, Succeeded).
                        Enabled by default. More info at https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase
                      type: boolean
                    followRedirects:
                      description: '`followRedirects` defines whether the scrape requests
                        should follow HTTP 3xx redirects.'
                      type: boolean
                    honorLabels:
                      description: '`honorLabels` chooses the metric''s labels on
                        collisions with target labels.'
                      type: boolean
                    honorTimestamps:
                      description: '`honorTimestamps` controls whether Prometheus
                        respects the timestamps present in scraped data.'
                      type: boolean
                    interval:
                      description: '`interval` at which metrics should be scraped
                        If not specified Prometheus'' global scrape_interval is used.'
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    metricRelabelings:
                      description: '`metricRelabelings` to apply to samples before
                        ingestion.'
                      items:
                        description: 'RelabelConfig allows dynamic rewriting of the
                          label set for targets, alerts, scraped samples and remote
                          write samples. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        properties:
                          action:
                            default: replace
                            description: '`action` to perform based on the regex matching.
                              `Uppercase` and `Lowercase` actions require Prometheus
                              >= v2.36.0. `DropEqual` and `KeepEqual` actions require
                              Prometheus >= v2.41.0. Default: "Replace"'
                            enum:
                            - replace
                            - Replace
                            - keep
                            - Keep
                            - drop
                            - Drop
                            - hashmod
                            - HashMod
                            - labelmap
                            - LabelMap
                            - labeldrop
                            - LabelDrop
                            - labelkeep
                            - LabelKeep
                            - lowercase
                            - Lowercase
                            - uppercase
                            - Uppercase
                            - keepequal
                            - KeepEqual
                            - dropequal
                            - DropEqual
                            type: string
                          modulus:
                            description: '`modulus` to take of the hash of the source
                              label values.  Only applicable when the action is `HashMod`.'
                            format: int64
                            type: integer
                          regex:
                            description: '`regex` against which the extracted value
                              is matched. Default: "(.*)"'
                            type: string
                          replacement:
                            description: '`replacement` value against which a Replace
                              action is performed if the regular expression matches.
                              Regex capture groups are available. Default: "$1"'
                            type: string
                          separator:
                            description: '`separator` is the string between concatenated
                              SourceLabels.'
                            type: string
                          sourceLabels:
                            description: '`sourceLabels` select values from existing
                              labels. Their content is concatenated using the configured
                              Separator and matched against the configured regular
                              expression.'
                            items:
                              description: LabelName is a valid Prometheus label name
                                which may only contain ASCII letters, numbers, as well
                                as underscores.
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                              type: string
                            type: array
                          targetLabel:
                            description: '`targetLabel` to which the resulting string
                              is written in a Replace action. It is mandatory for
                              Replace actions.'
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                            type: string
                        type: object
                      type: array
                    oauth2:
                      description: '`oauth2` configures the OAuth2 settings to use
                        when scraping the target. It requires Prometheus >= 2.27.0.
                        Cannot be set at the same time as `authorization`, or `basicAuth`.'
                      properties:
                        clientId:
                          description: '`clientId` specifies a key of a Secret or
                            ConfigMap containing the OAuth2 client''s ID.'
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        clientSecret:
                          description: '`clientSecret` specifies a key of a Secret
                            containing the OAuth2 client''s secret.'
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        endpointParams:
                          additionalProperties:
                            type: string
                          description: '`endpointParams` configures the HTTP parameters
                            to append to the token URL.'
                          type: object
                        scopes:
                          description: '`scopes` defines the OAuth2 scopes to be used
                            for the token request.'
                          items:
                            type: string
                          type: array
                        tokenUrl:
                          description: '`tokenURL` configures the URL to fetch the
                            token from.'
                          minLength: 1
                          type: string
                      required:
                      - clientId
                      - clientSecret
                      - tokenUrl
                      type: object
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: '`params` define optional HTTP URL parameters.'
                      type: object
                    path:
                      description: '`path` from which to scrape metrics. If empty,
                        Prometheus uses the default value (e.g. `/metrics`).'
                      type: string
                    port:
                      description: '`port` is the port name or number to scrape on
                        the Service.'
                      type: string
                    proxyUrl:
                      description: '`proxyURL` configures the HTTP Proxy URL (e.g.
                        "http://proxyserver:2195") to go through when scraping the
                        target.'
                      type: string
                    relabelings:
                      description: '`relabelings` to apply to samples before scraping.
                        Prometheus Operator automatically adds relabelings for a few
                        standard Kubernetes fields. The original scraping job''s name
                        is available via the `__tmp_prometheus_job_name` label. More
                        info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                      items:
                        description: 'RelabelConfig allows dynamic rewriting of the
                          label set for targets, alerts, scraped samples and remote
                          write samples. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config'
                        properties:
                          action:
                            default: replace
                            description: '`action` to perform based on the regex matching.
                              `Uppercase` and `Lowercase` actions require Prometheus
                              >= v2.36.0. `DropEqual` and `KeepEqual` actions require
                              Prometheus >= v2.41.0. Default: "Replace"'
                            enum:
                            - replace
                            - Replace
                            - keep
                            - Keep
                            - drop
                            - Drop
                            - hashmod
                            - HashMod
                            - labelmap
                            - LabelMap
                            - labeldrop
                            - LabelDrop
                            - labelkeep
                            - LabelKeep
                            - lowercase
                            - Lowercase
                            - uppercase
                            - Uppercase
                            - keepequal
                            - KeepEqual
                            - dropequal
                            - DropEqual
                            type: string
                          modulus:
                            description: '`modulus` to take of the hash of the source
                              label values.  Only applicable when the action is `HashMod`.'
                            format: int64
                            type: integer
                          regex:
                            description: '`regex` against which the extracted value
                              is matched. Default: "(.*)"'
                            type: string
                          replacement:
                            description: '`replacement` value against which a Replace
                              action is performed if the regular expression matches.
                              Regex capture groups are available. Default: "$1"'
                            type: string
                          separator:
                            description: '`separator` is the string between concatenated
                              SourceLabels.'
                            type: string
                          sourceLabels:
                            description: '`sourceLabels` select values from existing
                              labels. Their content is concatenated using the configured
                              Separator and matched against the configured regular
                              expression.'
                            items:
                              description: LabelName is a valid Prometheus label name
                                which may only contain ASCII letters, numbers, as well
                                as underscores.
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                              type: string
                            type: array
                          targetLabel:
                            description: '`targetLabel` to which the resulting string
                              is written in a Replace action. It is mandatory for
                              Replace actions.'
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                            type: string
                        type: object
                      type: array
                    scheme:
                      description: '`scheme` is the HTTP scheme to use for scraping.
                        `http` and `https` are the expected values unless you rewrite
                        the `__scheme__` label via relabeling. If empty, Prometheus
                        uses the default value `http`.'
                      enum:
                      - http
                      - https
                      type: string
                    scrapeTimeout:
                      description: '`scrapeTimeout` is the timeout after which the
                        scrape is ended If not specified, the Prometheus global scrape
                        timeout is used unless it is less than the target''s scrape
                        interval value in which the latter is used.'
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: '`targetPort` is the port to scrape metrics from.
                        If the Service object has multiple ports, this can be used
                        to specify which one should be scraped.'
                      x-kubernetes-int-or-string: true
                    tlsConfig:
                      description: '`tlsConfig` configures TLS settings for scraping
                        the target.'
                      properties:
                        ca:
                          description: Certificate authority used when verifying server
                            certificates.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        cert:
                          description: Client certificate to present when doing client-authentication.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    trackTimestampsStaleness:
                      description: '`trackTimestampsStaleness` defines whether Prometheus
                        tracks staleness of the metrics that have an explicit timestamp
                        present in scraped data. Has no effect if `honorTimestamps`
                        is false. It requires Prometheus >= v2.48.0.'
                      type: boolean
                  type: object
                type: array
              jobLabel:
                description: '`jobLabel` selects the label from the associated Kubernetes
                  Service object which will be used as the `job` label for all metrics.
                  For example if `jobLabel` is set to `foo` and the Kubernetes Service
                  object is labeled with `foo: bar`, then Prometheus adds the `job="bar"`
                  label to all ingested metrics. If the value of this field is empty,
                  the `job` label of the metrics defaults to the name of the Kubernetes
                  Service.'
                type: string
              keepDroppedTargets:
                description: '`keepDroppedTargets` specifies the maximum number of
                  dropped targets to keep in memory. 0 means no limit. If empty, Prometheus
                  uses the default value. It requires Prometheus >= v2.47.0.'
                format: int64
                type: integer
              labelLimit:
                description: Per-scrape limit on number of labels that will be accepted
                  for a sample. If more than this number of labels are present post
                  metric-relabeling, the entire scrape will be treated as failed. 0
                  means no limit.
                format: int64
                type: integer
              labelNameLengthLimit:
                description: Per-scrape limit on length of labels name that will be
                  accepted for a sample. If a label name is longer than this number
                  post metric-relabeling, the entire scrape will be treated as failed.
                  0 means no limit.
                format: int64
                type: integer
              labelValueLengthLimit:
                description: Per-scrape limit on length of labels value that will be
                  accepted for a sample. If a label value is longer than this number
                  post metric-relabeling, the entire scrape will be treated as failed.
                  0 means no limit.
                format: int64
                type: integer
              namespaceSelector:
                description: '`namespaceSelector` is a selector for the namespaces
                  from which endpoints are discovered. If nil, only the namespace of
                  the ServiceMonitor object is in scope.'
                properties:
                  any:
                    description: Boolean describing whether all namespaces are selected
                      in contrast to a list restricting them.
                    type: boolean
                  matchNames:
                    description: List of namespace names to select from.
                    items:
                      type: string
                    type: array
                type: object
              podTargetLabels:
                description: '`podTargetLabels` defines the labels which are transferred
                  from the associated Kubernetes Pod object onto the ingested metrics.'
                items:
                  type: string
                type: array
              sampleLimit:
                description: '`sampleLimit` defines a per-scrape limit on the number
                  of scraped samples that will be accepted. If more than this number
                  of samples are present after metric relabeling, the entire scrape
                  will be treated as failed. 0 means no limit.'
                format: int64
                type: integer
              scrapeClass:
                description: The scrape class to apply.
                minLength: 1
                type: string
              scrapeProtocols:
                description: '`scrapeProtocols` defines the protocols to negotiate
                  during a scrape. It tells clients the protocols supported by Prometheus
                  in order of preference (from most to least preferred). If unset,
                  Prometheus uses its default value. It requires Prometheus >= v2.49.0.'
                items:
                  description: ScrapeProtocol represents a protocol used by Prometheus
                    for scraping metrics. Supported values are `OpenMetricsText0.0.1`,
                    `OpenMetricsText1.0.0`, and `PrometheusText0.0.4`. The original
                    text-based format of Prometheus 2.x is `PrometheusText0.0.4`. The
                    OpenMetrics text exposition format in its various versions are
                    `OpenMetricsText0.0.1` and `OpenMetricsText1.0.0`. See the OpenMetrics
                    specification for more details.
                  enum:
                  - PrometheusProto
                  - OpenMetricsText0.0.1
                  - OpenMetricsText1.0.0
                  - PrometheusText0.0.4
                  type: string
                type: array
              selector:
                description: '`selector` to select Endpoints objects.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              targetLabels:
                description: '`targetLabels` defines the labels which are transferred
                  from the associated Kubernetes Service object onto the ingested
                  metrics.'
                items:
                  type: string
                type: array
              targetLimit:
                description: '`targetLimit` defines a limit on the number of scraped
                  targets that will be accepted. If more than this number of targets
                  are present after target relabeling, Prometheus will refuse to scrape
                  the targets for this job in accordance with its target_limit configuration.
                  0 means no limit.'
                format: int64
                type: integer
            required:
            - selector
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
    operator.prometheus.io/version: 0.85.0
  name: prometheusrules.monitoring.coreos.com
spec:
  group: monitoring.coreos.com
  names:
    categories:
    - prometheus-operator
    kind: PrometheusRule
    listKind: PrometheusRuleList
    plural: prometheusrules
    shortNames:
    - promrule
    singular: prometheusrule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          The `PrometheusRule` custom resource definition (CRD) defines [alerting](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) and [recording](https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/) rules to be evaluated by `Prometheus` or `ThanosRuler` objects.

          `Prometheus` and `ThanosRuler` objects select `PrometheusRule` objects using label and namespace selectors.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the specification of desired alerting rule definitions
              for Prometheus.
            properties:
              groups:
                description: groups defines the content of Prometheus rule file
                items:
                  description: RuleGroup is a list of sequentially evaluated recording
                    and alerting rules.
                  properties:
                    interval:
                      description: interval defines how often rules in the group are
                        evaluated.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        labels define the labels to add or overwrite before storing the result for its rules.
                        The labels defined at the rule level take precedence.

                        It requires Prometheus >= 3.0.0.
                        The field is ignored for Thanos Ruler.
                      type: object
                    limit:
                      description: |-
                        limit defines the number of alerts an alerting rule and series a recording
                        rule can produce.
                        Limit is supported starting with Prometheus >= 2.31 and Thanos Ruler >= 0.24.
                      type: integer
                    name:
                      description: name defines the name of the rule group.
                      minLength: 1
                      type: string
                    partial_response_strategy:
                      description: |-
                        partial_response_strategy is only used by ThanosRuler and will
                        be ignored by Prometheus instances.
                        More info: https://github.com/thanos-io/thanos/blob/main/docs/components/rule.md#partial-response
                      pattern: ^(?i)(abort|warn)?$
                      type: string
                    query_offset:
                      description: |-
                        query_offset defines the offset the rule evaluation timestamp of this particular group by the specified duration into the past.

                        It requires Prometheus >= v2.53.0.
                        It is not supported for ThanosRuler.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    rules:
                      description: rules defines the list of alerting and recording
                        rules.
                      items:
                        description: |-
                          Rule describes an alerting or recording rule
                          See Prometheus documentation: [alerting](https://www.prometheus.io/docs/prometheus/latest/configuration/alerting_rules/) or [recording](https://www.prometheus.io/docs/prometheus/latest/configuration/recording_rules/#recording-rules) rule
                        properties:
                          alert:
                            description: |-
                              alert defines the name of the alert. Must be a valid label value.
                              Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              annotations defines annotations to add to each alert.
                              Only valid for alerting rules.
                            type: object
                          expr:
                            anyOf:
                            - type: integer
                            - type: string
                            description: expr defines the PromQL expression to evaluate.
                            x-kubernetes-int-or-string: true
                          for:
                            description: for defines how alerts are considered firing
                              once they have been returned for this long.
                            pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                          keep_firing_for:
                            description: keep_firing_for defines how long an alert
                              will continue firing after the condition that triggered
                              it has cleared.
                            minLength: 1
                            pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels defines labels to add or overwrite.
                            type: object
                          record:
                            description: |-
                              record defines the name of the time series to output to. Must be a valid metric name.
                              Only one of `record` and `alert` must be set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
          status:
            description: |-
              status defines the status subresource. It is under active development and is updated only when the
              "StatusForConfigurationResources" feature gate is enabled.

              Most recent observed status of the PrometheusRule. Read-only.
              More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              bindings:
                description: bindings defines the list of workload resources (Prometheus,
                  PrometheusAgent, or ThanosRuler) which select the configuration
                  resource.
                items:
                  description: WorkloadBinding is a link between a configuration resource
                    and a workload resource.
                  properties:
                    conditions:
                      description: conditions defines the current state of the configuration
                        resource when bound to the referenced Prometheus object.
                      items:
                        description: ConfigResourceCondition describes the status
                          of configuration resources linked to Prometheus, PrometheusAgent,
                          Alertmanager, or ThanosRuler.
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime defines the time of the
                              last update to the current status property.
                            format: date-time
                            type: string
                          message:
                            description: message defines the human-readable message
                              indicating details for the condition's last transition.
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration defines the .metadata.generation that the
                              condition was set based upon. For instance, if `.metadata.generation` is
                              currently 12, but the `.status.conditions[].observedGeneration` is 9, the
                              condition is out of date with respect to the current state of the object.
                            format: int64
                            type: integer
                          reason:
                            description: reason for the condition's last transition.
                            type: string
                          status:
                            description: status of the condition.
                            minLength: 1
                            type: string
                          type:
                            description: |-
                              type of the condition being reported.
                              Currently, only "Accepted" is supported.
                            enum:
                            - Accepted
                            minLength: 1
                            type: string
                        required:
                        - lastTransitionTime
                        - status
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    group:
                      description: group defines the group of the referenced resource.
                      enum:
                      - monitoring.coreos.com
                      type: string
                    name:
                      description: name defines the name of the referenced object.
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace defines the namespace of the referenced
                        object.
                      minLength: 1
                      type: string
                    resource:
                      description: resource defines the type of resource being referenced
                        (e.g. Prometheus, PrometheusAgent, or ThanosRuler).
                      enum:
                      - prometheuses
                      - prometheusagents
                      - thanosrulers
                      type: string
                  required:
                  - group
                  - name
                  - namespace
                  - resource
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                - name
                - namespace
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
