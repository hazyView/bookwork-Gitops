apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookwork-api
  namespace: bookwork
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bookwork-api
  template:
    metadata:
      labels:
        app: bookwork-api
        app.kubernetes.io/name: bookwork-api
        app.kubernetes.io/part-of: bookwork
        app.kubernetes.io/component: api
        argocd.argoproj.io/instance: bookwork-api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: api
          #use a symbolic name that Kustomize will replace
          image: bookwork-api
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # Container-level security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            runAsUser: 1000
          # Mount writable volumes for application temp files
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: app-logs
            mountPath: /app/logs
          env:
          # Reference to sealed secret values
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: bookwork-api-secret
                key: database-url
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: bookwork-api-secret
                key: jwt-secret
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
      # Volumes for writable directories
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: app-logs
        emptyDir:
          sizeLimit: 200Mi