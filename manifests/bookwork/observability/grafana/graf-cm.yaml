---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: bookwork-observability
data:
  grafana.ini: |
    [server]
    http_port = 3000
    root_url = https://grafana.bookwork-demo.com
    
    [database]
    type = sqlite3
    
    [users]
    allow_sign_up = true
    auto_assign_org = true
    auto_assign_org_role = Viewer
    viewers_can_edit = false
    editors_can_admin = false
    default_theme = dark
    
    [security]
    disable_gravatar = true
    
    [dashboards]
    # Let Grafana use default home dashboard behavior
    
    [auth]
    disable_login_form = false
    disable_signout_menu = false
    
    [auth.anonymous]
    # CRITICAL SECURITY FIX: Disable anonymous admin access
    enabled = false
    # If anonymous access is needed (NOT recommended), use Viewer role only
    # enabled = true
    # org_role = Viewer
    
    [auth.github]
    enabled = true
    allow_sign_up = true
    client_id = ${GF_AUTH_GITHUB_CLIENT_ID}
    client_secret = ${GF_AUTH_GITHUB_CLIENT_SECRET}
    scopes = user:email,read:org
    auth_url = https://github.com/login/oauth/authorize
    token_url = https://github.com/login/oauth/access_token
    api_url = https://api.github.com/user
    
    # SECURITY CONFIGURATION OPTIONS (choose one approach):
    
    # OPTION 1: Open access with manual approval (recommended for most cases)
    # Allow any GitHub user to sign up, but they get Viewer role by default
    # Admins can then manually promote users as needed
    allowed_organizations = 
    auto_assign_org_role = Viewer
    
    # OPTION 2: Restrict to specific organization (if you know it)
    # Uncomment and replace 'hazyView' with your GitHub organization name
    # allowed_organizations = hazyView
    # auto_assign_org_role = Editor
    
    # OPTION 3: Restrict to specific teams within organization
    # Requires organization + team configuration
    # allowed_organizations = hazyView
    # team_ids = 12345,67890
    # auto_assign_org_role = Editor
    
    # OPTION 4: Use email domain restriction (alternative approach)
    # This would require additional configuration in your GitHub OAuth app
    # and is handled at the OAuth app level, not here
    
    # Security settings (always apply these)
    allow_assign_grafana_admin = false
    skip_org_role_update_sync = false
    
    [log]
    mode = console
    level = info
    
    [log.console]
    level = info
    format = json
    
    [metrics]
    enabled = true
    
    [alerting]
    enabled = false
    
    [unified_alerting]
    enabled = true
    
    [feature_toggles]
    enable = ngalert
    
    [rbac]
    enabled = false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: bookwork-observability
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: true
      jsonData:
        timeInterval: "5s"
        queryTimeout: "300s"
        httpMethod: "GET"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: bookwork-observability
data:
  dashboard-providers.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'Bookwork Dashboards'
      type: file
      disableDeletion: false
      editable: false
      updateIntervalSeconds: 30
      allowUiUpdates: false
      options:
        path: /var/lib/grafana/dashboards
        foldersFromFilesStructure: true