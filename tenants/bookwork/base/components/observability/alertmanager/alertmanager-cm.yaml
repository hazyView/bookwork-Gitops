---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: bookwork-observability
data:
  alertmanager.yml: |
    global:
      # Basic global configuration
      resolve_timeout: 5m

    # Inhibition rules allow to mute a set of alerts given that another alert is firing.
    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'cluster', 'service']
      
      - source_match:
          severity: 'warning'
        target_match:
          severity: 'info'
        equal: ['alertname', 'cluster', 'service']

    # Route tree for alert notification
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'default-receiver'
      routes:
        # Critical alerts - immediate notification
        - match:
            severity: critical
          receiver: 'critical-alerts'
          group_wait: 10s
          repeat_interval: 5m
        
        # Warning alerts - standard notification
        - match:
            severity: warning
          receiver: 'warning-alerts'
          group_wait: 30s
          repeat_interval: 30m
        
        # Frontend specific alerts
        - match:
            service: bookwork-frontend
          receiver: 'frontend-alerts'
          group_wait: 30s
          repeat_interval: 15m

        # Infrastructure alerts
        - match:
            team: infrastructure
          receiver: 'infrastructure-alerts'
          group_wait: 60s
          repeat_interval: 1h

    receivers:
      - name: 'default-receiver'
        webhook_configs:
          - url: 'http://alertmanager-slack-bridge:5001/default'
            send_resolved: true
            title: '[ALERT] {{ .GroupLabels.alertname }}'

      - name: 'critical-alerts'
        # All critical alerts go through Slack bridge
        webhook_configs:
          - url: 'http://alertmanager-slack-bridge:5001/critical'
            send_resolved: true
            title: 'üö® [CRITICAL] {{ .GroupLabels.alertname }}'
            text: |
              {{ range .Alerts }}
              Alert: {{ .Annotations.summary }}
              Description: {{ .Annotations.description }}
              Labels: {{ range .Labels.SortedPairs }} {{ .Name }}={{ .Value }} {{ end }}
              {{ end }}

      - name: 'warning-alerts'
        webhook_configs:
          - url: 'http://alertmanager-slack-bridge:5001/warning'
            send_resolved: true
            title: '‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }}'

      - name: 'frontend-alerts'
        webhook_configs:
          - url: 'http://alertmanager-slack-bridge:5001/frontend'
            send_resolved: true
            title: 'üñ•Ô∏è [FRONTEND] {{ .GroupLabels.alertname }}'

      - name: 'infrastructure-alerts'
        webhook_configs:
          - url: 'http://alertmanager-slack-bridge:5001/infrastructure'
            send_resolved: true
            title: 'üèóÔ∏è [INFRASTRUCTURE] {{ .GroupLabels.alertname }}'
